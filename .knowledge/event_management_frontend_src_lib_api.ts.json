{"is_source_file": true, "format": "TypeScript", "description": "API client module for interacting with backend endpoints, handling authentication tokens, making HTTP requests, and providing functions for user login, registration, event management, attendee management, and RSVP.", "external_files": ["@/types/api"], "external_methods": [], "published": ["apiFetch", "login", "register", "me", "listEvents", "getEvent", "createEvent", "updateEvent", "deleteEvent", "listAttendees", "rsvpEvent", "logout"], "classes": [], "methods": [{"name": "function getToken(): string | null { getToken", "description": "Retrieves the stored authentication token from local storage, returns null if not available.", "scope": "", "scopeKind": ""}, {"name": "function authHeader(): Record<string, string> { authHeader", "description": "Constructs the Authorization header with the Bearer token if available.", "scope": "", "scopeKind": ""}, {"name": "export async function apiFetch<T>(path: string, options: RequestInit = {}): Promise<T> { apiFetch", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function createEvent(payload: Partial<EventItem>): Promise<EventItem> { createEvent", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function deleteEvent(id: string): Promise<void> { deleteEvent", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function getEvent(id: string): Promise<EventItem> { getEvent", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function listAttendees(id: string): Promise<Attendee[]> { listAttendees", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function listEvents(params?: { q?: string; my?: boolean }): Promise<EventItem[]> { listEvents", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function login(email: string, password: string): Promise<LoginResponse> { login", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export function logout(): void { logout", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function me(): Promise<CurrentUser> { me", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function register(name: string, email: string, password: string): Promise<void> { register", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function rsvpEvent(id: string, status: \"yes\" | \"no\" | \"maybe\", note?: string): Prom/ rsvpEvent", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function updateEvent(id: string, payload: Partial<EventItem>): Promise<EventItem> { updateEvent", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["fetch", "localStorage.getItem", "localStorage.setItem", "localStorage.removeItem"], "search-terms": ["api client", "auth token handling", "event management API", "attendee list", "RSVP"], "state": 2, "file_id": 11, "knowledge_revision": 67, "git_revision": "", "revision_history": [{"24": ""}, {"56": ""}, {"67": ""}], "ctags": [{"_type": "tag", "name": "API_BASE", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^const API_BASE = process.env.NEXT_PUBLIC_API_BASE_URL || \"\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ApiError", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export interface ApiError extends Error {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "HttpMethod", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export type HttpMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "apiFetch", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function apiFetch<T>(path: string, options: RequestInit = {}): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "authHeader", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^function authHeader(): Record<string, string> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createEvent", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function createEvent(payload: Partial<EventItem>): Promise<EventItem> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  const data = await apiFetch<LoginResponse>(\"\\/auth\\/login\", {$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "deleteEvent", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function deleteEvent(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  details?: unknown;$/", "language": "TypeScript", "kind": "property", "scope": "ApiError", "scopeKind": "interface"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^    const err: ApiError = new Error(message) as ApiError;$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "getEvent", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function getEvent(id: string): Promise<EventItem> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getToken", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^function getToken(): string | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  const headers: HeadersInit = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "listAttendees", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function listAttendees(id: string): Promise<Attendee[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "listEvents", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function listEvents(params?: { q?: string; my?: boolean }): Promise<EventItem[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function login(email: string, password: string): Promise<LoginResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export function logout(): void {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function me(): Promise<CurrentUser> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^    const message = typeof details === \"object\" && details && \"message\" in (details as Record<st/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function register(name: string, email: string, password: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(url, { ...options, headers });$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "rsvpEvent", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function rsvpEvent(id: string, status: \"yes\" | \"no\" | \"maybe\", note?: string): Prom/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  const search = new URLSearchParams();$/", "language": "TypeScript", "kind": "constant", "scope": "listEvents", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  status?: number;$/", "language": "TypeScript", "kind": "property", "scope": "ApiError", "scopeKind": "interface"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  const text = await res.text();$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  const token = getToken();$/", "language": "TypeScript", "kind": "constant", "scope": "authHeader", "scopeKind": "function"}, {"_type": "tag", "name": "updateEvent", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^export async function updateEvent(id: string, payload: Partial<EventItem>): Promise<EventItem> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/eventmaster-162273-162283/event_management_frontend/src/lib/api.ts", "pattern": "/^  const url = `${API_BASE}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}], "hash": "1226772b6007d00b44876a89f47e811d", "format-version": 4, "code-base-name": "event_management_frontend", "filename": "event_management_frontend/src/lib/api.ts", "fields": [{"name": "export interface ApiError extends Error {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details?: unknown;", "scope": "ApiError", "scopeKind": "interface", "description": "unavailable"}, {"name": "status?: number;", "scope": "ApiError", "scopeKind": "interface", "description": "unavailable"}]}